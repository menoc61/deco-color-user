{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { DataStore } from \"aws-amplify\";\nimport { Basket, BasketService } from \"../models\";\nimport { useAuthContext } from \"./AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BasketContext = createContext({});\n\nvar BasketContextProvider = function BasketContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useAuthContext = useAuthContext(),\n      dbUser = _useAuthContext.dbUser;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      company = _useState2[0],\n      setCompany = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      basket = _useState4[0],\n      setBasket = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      basketServices = _useState6[0],\n      setBasketServices = _useState6[1];\n\n  var totalPrice = basketServices.reduce(function (sum, basketService) {\n    return sum + basketService.quantity * basketService.Service.price;\n  }, company == null ? void 0 : company.deliveryFee);\n  useEffect(function () {\n    DataStore.query(Basket, function (b) {\n      return b.companyID(\"eq\", company.id).userID(\"eq\", dbUser.id);\n    }).then(function (baskets) {\n      return setBasket(baskets[0]);\n    });\n  }, [dbUser, company]);\n  useEffect(function () {\n    if (basket) {\n      DataStore.query(BasketService, function (bd) {\n        return bd.basketID(\"eq\", basket.id);\n      }).then(setBasketServices);\n    }\n  }, [basket]);\n\n  var addServiceToBasket = function addServiceToBasket(service, quantity) {\n    var theBasket, newService;\n    return _regeneratorRuntime.async(function addServiceToBasket$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = basket;\n\n            if (_context.t0) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(createNewBasket());\n\n          case 4:\n            _context.t0 = _context.sent;\n\n          case 5:\n            theBasket = _context.t0;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(DataStore.save(new BasketService({\n              quantity: quantity,\n              Service: service,\n              basketID: theBasket.id\n            })));\n\n          case 8:\n            newService = _context.sent;\n            setBasketServices([].concat(_toConsumableArray(basketServices), [newService]));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createNewBasket = function createNewBasket() {\n    var newBasket;\n    return _regeneratorRuntime.async(function createNewBasket$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(DataStore.save(new Basket({\n              userID: dbUser.id,\n              companyID: company.id\n            })));\n\n          case 2:\n            newBasket = _context2.sent;\n            setBasket(newBasket);\n            return _context2.abrupt(\"return\", newBasket);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(BasketContext.Provider, {\n    value: {\n      addServiceToBasket: addServiceToBasket,\n      setCompany: setCompany,\n      company: company,\n      basket: basket,\n      basketServices: basketServices,\n      totalPrice: totalPrice\n    },\n    children: children\n  });\n};\n\nexport default BasketContextProvider;\nexport var useBasketContext = function useBasketContext() {\n  return useContext(BasketContext);\n};","map":{"version":3,"names":["createContext","useState","useEffect","useContext","DataStore","Basket","BasketService","useAuthContext","BasketContext","BasketContextProvider","children","dbUser","company","setCompany","basket","setBasket","basketServices","setBasketServices","totalPrice","reduce","sum","basketService","quantity","Service","price","deliveryFee","query","b","companyID","id","userID","then","baskets","bd","basketID","addServiceToBasket","service","createNewBasket","theBasket","save","newService","newBasket","useBasketContext"],"sources":["C:/Users/MENO/Desktop/PROJECT/APP-DECO-COLOR/deco-color-user/src/contexts/BasketContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\nimport { DataStore } from \"aws-amplify\";\nimport { Basket, BasketService } from \"../models\";\nimport { useAuthContext } from \"./AuthContext\";\n\nconst BasketContext = createContext({});\n\nconst BasketContextProvider = ({ children }) => {\n  const { dbUser } = useAuthContext();\n\n  const [company, setCompany] = useState(null);\n  const [basket, setBasket] = useState(null);\n  const [basketServices, setBasketServices] = useState([]);\n\n  const totalPrice = basketServices.reduce(\n    (sum, basketService) => sum + basketService.quantity * basketService.Service.price,\n    company?.deliveryFee\n  );\n\n  useEffect(() => {\n    DataStore.query(Basket, (b) =>\n      b.companyID(\"eq\", company.id).userID(\"eq\", dbUser.id)\n    ).then((baskets) => setBasket(baskets[0]));\n  }, [dbUser, company]);\n\n  useEffect(() => {\n    if (basket) {\n      DataStore.query(BasketService, (bd) => bd.basketID(\"eq\", basket.id)).then(\n        setBasketServices\n      );\n    }\n  }, [basket]);\n\n  const addServiceToBasket = async (service, quantity) => {\n    // get the existing basket or create a new one\n    let theBasket = basket || (await createNewBasket());\n\n    // create a BasketService item and save to Datastore\n    const newService = await DataStore.save(\n      new BasketService({ quantity, Service: service, basketID: theBasket.id })\n    );\n\n    setBasketServices([...basketServices, newService]);\n  };\n\n  const createNewBasket = async () => {\n    const newBasket = await DataStore.save(\n      new Basket({ userID: dbUser.id, companyID: company.id })\n    );\n    setBasket(newBasket);\n    return newBasket;\n  };\n\n  return (\n    <BasketContext.Provider\n      value={{\n        addServiceToBasket,\n        setCompany,\n        company,\n        basket,\n        basketServices,\n        totalPrice,\n      }}\n    >\n      {children}\n    </BasketContext.Provider>\n  );\n};\n\nexport default BasketContextProvider;\n\nexport const useBasketContext = () => useContext(BasketContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}